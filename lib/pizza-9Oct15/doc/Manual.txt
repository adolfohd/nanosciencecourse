<HEAD>
<TITLE>Pizza.py Users Manual</TITLE>
<META NAME="docnumber" CONTENT="Pizza.py Toolkit">
<META NAME="author" CONTENT="http://pizza.sandia.gov - Sandia National Laboratories">
<META NAME="copyright" CONTENT="Copyright (2005) Sandia Corporation.  This software and manual is distributed under the GNU General Public License.">
</HEAD>

<BODY>

"Pizza.py WWW Site"_pws - "Pizza.py Documentation"_pd - "Pizza.py Tools"_pc :c

:link(pws,http://pizza.sandia.gov)
:link(pd,Manual.html)
:link(pc,Section_tools.html)

:line

<H1></H1>

Pizza.py Documentation :c,h3

Version info: :h4

The Pizza.py "version" is the date when it was released, such as 1 May
2010. Pizza.py is updated continuously.  Whenever we fix a bug or add a
feature, we release it immediately, and post a notice on "this page of
the WWW site"_bug.  Each dated copy of Pizza.py contains all the
features and bug-fixes up to and including that version date. The
version date is printed to the screen and logfile every time you run
Pizza.py. It is also in the file src/version.h and in the Pizza.py
directory name created when you unpack a tarball.

If you browse the HTML or PDF doc pages on the Pizza.py WWW site, they
always describe the most current version of Pizza.py. :ulb,l

If you browse the HTML or PDF doc pages included in your tarball, they
describe the version you have. :ule,l

Pizza.py is a loosely integrated collection of tools written in
Python, many of which provide pre- and post-processing capability for
the "LAMMPS"_lammps molecular dynamics, "ChemCell"_cccell cell
simulator, and "SPARTA"_sparta Direcct Simulation Monte Carlo (DSMC)
packages.  There are tools to create input files, convert between file
formats, process log and dump files, create plots, and visualize and
animate simulation snapshots.

The name Pizza.py is meant to evoke the aroma of a collection of
"toppings" that the user can combine in different ways on a "crust" of
basic functionality, with Python as the "cheese" that glues everything
together.

The maintainer of Pizza.py is "Steve
Plimpton"_http://www.sandia.gov/~sjplimp at "Sandia National
Laboratories"_sandia, a US Department of Energy ("DOE"_doe)
laboratory.  Many of the tools were written by Matt Jones, a BYU
student who spent a summer at Sandia.  The "Pizza.py WWW Site"_pws at
http://pizza.sandia.gov has more information about Pizza.py and its
uses.

:link(sandia,http://www.sandia.gov)
:link(bug,http://www.cs.sandia.gov/pizza/bug.html)
:link(sjp,http://www.cs.sandia.gov/~sjplimp)
:link(doe,http://www.doe.gov)
:link(lammps,http://lammps.sandia.gov)
:link(ccell,http://chemcell.sandia.gov)
:link(sparta,http://sparta.sandia.gov)

:line

The Pizza.py documentation is organized into the following sections.
If you find errors or omissions in this manual or have suggestions for
useful information to add, please send an email to sjplimp@sandia.gov
so we can improve the Pizza.py documentation.

"PDF file"_Manual.pdf of the entire manual, generated by
"htmldoc"_http://www.easysw.com/htmldoc

"Introduction"_Section_intro.html :olb,l
  1.1 "What is Pizza.py"_1_1 :ulb,b
  1.2 "Open source distribution"_1_2 :b
  1.3 "Acknowledgements"_1_3 :ule,b
"Installing Pizza.py"_Section_install.html :l
  2.1 "Installing Python"_2_1 :ulb,b
  2.2 "Running Pizza.py"_2_2 :b
  2.3 "Setting up the DEFAULTS.py file"_2_3 :b
  2.4 "Installing additional Python packages"_2_4 :b
  2.5 "Installing other software"_2_5 :ule,b
"Basics of using Pizza.py"_Section_basics.html :l
  3.1 "Python syntax"_3_1 :ulb,b
  3.2 "Pizza.py command line arguments"_3_2 :b
  3.3 "Pizza.py extensions to the Python interpreter"_3_3 :b
  3.4 "Using Pizza.py tools"_3_4 :b
  3.5 "Runnning Pizza.py and Python scripts"_3_5 :b
  3.6 "Error messages"_3_6 :ule,b
"Tools within Pizza.py"_Section_tools.html :l
"Example scripts"_Section_examples.html :l
"Extending Pizza.py"_Section_extend.html :l
:ole

:line

List of tools in Pizza.py:

"animate.py"_animate.html; Animate a series of image files
"bdump.py"_bdump.html; Read LAMMPS dump local files with bond info
"cdata.py"_cdata.html; Read, write, manipulate "ChemCell"_ccell data files
"chain.py"_chain.html; Create bead-spring chains for LAMMPS input
"cfg.py"_cfg.html; Convert LAMMPS snapshots to CFG format
"data.py"_data.html; Read, write, manipulate LAMMPS data files
"dump.py"_dump.html; Read, write, manipulate dump files and particle attributes
"ensight.py"_ensight.html; Convert LAMMPS snapshots to "Ensight"_ensight format
"gl.py"_gl.html; 3d interactive visualization via OpenGL
"gnu.py"_gnu.html; Create plots via "GnuPlot"_gnuplot plotting program
"histo.py"_histo.html; Particle density histogram from a dump
"image.py"_image.html; View and manipulate images
"ldump.py"_ldump.html; Read LAMMPS dump files with line info
"log.py"_log.html; Read LAMMPS log files and extract thermodynamic data
"matlab.py"_matlab.html; Create plots via "MatLab"_matlab numerical analysis program
"mdump.py"_mdump.html; Read, write, manipulate mesh dump files
"olog.py"_olog.html; Read other log files (ChemCell, SPPARKS, SPARTA) and extract time-series data
"pair.py"_pair.html; Compute LAMMPS pairwise energies
"patch.py"_patch.html; Create patchy Lennard-Jones particles for LAMMPS input
"pdbfile.py"_pdbfile.html; Read, write PDB files in combo with LAMMPS snapshots
"plotview.py"_plotview.html; Plot multiple vectors from a data set
"rasmol.py"_rasmol.html; 3d visualization via "RasMol"_rasmol program
"raster.py"_raster.html; 3d visualization via "Raster3d"_raster3d program
"sdata.py"_sdata.html; Read, write, manipulate "SPARTA"_sparta surface files
"svg.py"_svg.html; 3d visualization via "SVG"_svg files
"tdump.py"_tdump.html; Read LAMMPS dump files with triangle info
"vcr.py"_vcr.html; VCR-style GUI for 3d interactive OpenGL visualization
"vec.py"_vec.html; Create numeric vectors from columns in file or list of vecs
"vtk.py"_vtk.html; Convert LAMMPS snapshots to VTK format
"vmd.py"_vmd.html; Wrapper on "VMD visualization package"_vmd
"xyz.py"_xyz.html; Convert LAMMPS snapshots to XYZ format :tb(s=;)

:link(gnuplot,http://www.gnuplot.info)
:link(matlab,http://www.mathworks.com)
:link(rasmol,http://www.openrasmol.org)
:link(raster3d,http://www.bmsc.washington.edu/raster3d/raster3d.html)
:link(svg,http://www.w3.org/Graphics/SVG)
:link(ensight,http://www.ensight.com)
:link(vmd,http://www.ks.uiuc.edu/Research/vmd)

:link(1_1,Section_intro.html#1_1)
:link(1_2,Section_intro.html#1_2)
:link(1_3,Section_intro.html#1_3)

:link(2_1,Section_install.html#2_1)
:link(2_2,Section_install.html#2_2)
:link(2_3,Section_install.html#2_3)
:link(2_4,Section_install.html#2_4)
:link(2_5,Section_install.html#2_5)

:link(3_1,Section_basics.html#3_1)
:link(3_2,Section_basics.html#3_2)
:link(3_3,Section_basics.html#3_3)
:link(3_4,Section_basics.html#3_4)
:link(3_5,Section_basics.html#3_5)
:link(3_6,Section_basics.html#3_6)
